/**
 * This file was generated by the Jeddict
 */
package domain;

import java.util.ArrayList;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.validation.constraints.NotNull;

/**
 * @author Daniel Lindkvist
 */
@Entity
public class Artist implements Comparable<Artist> {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    @NotNull
    private Long id;

    @Basic
    private String name;

    @OneToMany(mappedBy = "artist", cascade = CascadeType.ALL, fetch = FetchType.EAGER)
    private List<Media> medias;
    
    public Artist(){}
    
    public Artist(String name) {
        this.name = name;
    }

    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public List<Media> getMedias() {
        if (medias == null) {
            medias = new ArrayList<>();
        }
        return this.medias;
    }

    public void setMedias(List<Media> medias) {
        this.medias = medias;
    }

    public void addMedia(Media media) {
        getMedias().add(media);
        media.setArtist(this);
    }

    public void removeMedia(Media media) {
        getMedias().remove(media);
        media.setArtist(null);
    }

    @Override
    public String toString() {
        return name;
    }


    @Override
    public int compareTo(Artist o) {
        return this.getName().compareTo(o.getName());
    }
    

}